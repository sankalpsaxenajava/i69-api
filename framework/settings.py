"""
Django settings for framework project.
Generated by 'django-admin startproject' using Django 2.1.3.
For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import ast
import os
import environ
import datetime
from framework import override_settings
from datetime import timedelta



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

env = environ.Env()

# print(os.environ)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm9rorp2qa!(d1+pk1b)4pv1-7@6f^ps*5@r_mh@3+t9xx857y@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphene_django',
    'channels',
    'worker',
    'django_extensions', # for `python manage.py runserver_plus` command
    'easy_select2',
    'import_export',
    'django_filters',
    'ckeditor',
    'user',
    'reports',
    'gifts',
    'moments',
    "corsheaders",
    'social_django',
    'purchase',
    'gallery',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'defaultPicker',
    'whitenoise',
    'paypal.standard.ipn',
    'onesignal_sdk',
    'django_otp',
    'django_otp.plugins.otp_totp',
    'crispy_forms',
    'django_celery_beat',
    'push_notifications',
    'chat',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
]
    #'graphql_auth',

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'user.middleware.TokenAuthenticationMiddleware',
    'user.middleware.RequestMiddleware'

]

AUTH_USER_MODEL = 'user.User'

ROOT_URLCONF = 'framework.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'static')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect'
            ],
            'libraries':{
                'admin_custom_tags': 'user.templatetags.admin_custom_tags',
            
            }
        },
        
    },
]
ASGI_APPLICATION = 'framework.router.application'



#comment this on production
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
if env.db('DATABASE_URL', ''):
    DATABASES = {
        'default': env.db('DATABASE_URL')
    }
else:
    DATABASES = {
        'default': override_settings.DATABASE
    }

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/



SOCIAL_AUTH_USER_MODEL = 'user.User'

GRAPHENE = {
    "SCHEMA": "framework.schema.schema",
    "SUBSCRIPTION_PATH": "/ws/graphql",
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],
}
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'graphql_jwt.backends.JSONWebTokenBackend',
]
#    "graphql_auth.backends.GraphQLAuthBackend",


GRAPHQL_JWT = {
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_LONG_RUNNING_REFRESH_TOKEN': True,
    'JWT_EXPIRATION_DELTA': timedelta(days=14),
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=14),
    "JWT_ALLOW_ANY_CLASSES": [
        "graphql_auth.mutations.Register",
        "graphql_auth.mutations.VerifyAccount",
        "graphql_auth.mutations.ResendActivationEmail",
        "graphql_auth.mutations.SendPasswordResetEmail",
        "graphql_auth.mutations.PasswordReset",
        "graphql_auth.mutations.ObtainJSONWebToken",
        "graphql_auth.mutations.VerifyToken",
        "graphql_auth.mutations.RefreshToken",
        "graphql_auth.mutations.RevokeToken",
        "graphql_auth.mutations.VerifySecondaryEmail",
    ],
}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [ast.literal_eval(os.environ.get('REDIS_CHANNEL_BACKEND', ('127.0.0.1', 6379)))],
        },
    },
}
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     }
# }

CORS_ALLOW_ALL_ORIGINS = True

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.environ.get('REDIS_CACHE_URL', 'redis://127.0.0.1:6379/1'),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "example"
    }
}
WSGI_APPLICATION = 'framework.wsgi.application'

# Number of seconds of inactivity before a user is marked offline
USER_ONLINE_TIMEOUT = 300

# Number of seconds that we will keep track of inactive users for before 
# their last seen is removed from the cache
USER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 30


SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '403376972935'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '07z1nGIdZap-3kARgx256wJ6'


SOCIAL_AUTH_FACEBOOK_KEY = '1610603699070152'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = 'cc752b4e78233fe6df148dc6305fb6d0'  # App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']

SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id,name,email',
}

SOCIAL_AUTH_TWITTER_KEY = 'mJ2pSGZJ6VxUIh6T9ZQg8m84a'
SOCIAL_AUTH_TWITTER_SECRET = 'HIwxfqmS1QRoqJz0WVfDif5bFV7mg0ti6hqTrL7jKg5Uwgj0X2'
SOCIAL_AUTH_TWITTER_CALLBACK_URLS = 'https://admin.chatadmin-mod.click/signin-twitter'
# SOCIAL_AUTH_TWITTER_CALLBACK_URLS = 'http://localhost:8000/signin-twitter'


PAYPAL_RECEIVER_EMAIL = 'sb-medzq13794471@business.example.com'

PAYPAL_TEST = True



ONESIGNAL_REST_API_KEY = 'MWYyMTYwMzAtMGRiNC00YTYyLTliZDItNjEzMTU3YjI0ZjZm'
ONESIGNAL_APP_ID = '0be9bbe8-af94-4498-8c96-36cc96604f41'




SOCIAL_AUTH_JSONFIELD_ENABLED = True

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(hours=1)
}

CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 'https://i69app.com', 'https://admin.i69app.com', 'https://i69social-admin.vercel.app', 'https://admin-panel-code.vercel.app','https://studio.apollographql.com','https://chatadmin-mode.click']
CORS_ALLOWED_METHODS = ['GET','POST', 'PUT', 'PATCH', 'OPTIONS', 'DELETE']
REST_AUTH_SERIALIZERS = {'JWT_TOKEN_CLAIMS_SERIALIZER': 'user.serializers.MyTokenObtainPairSerializer'}




DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 80
FILE_UPLOAD_MAX_MEMORY_SIZE = DATA_UPLOAD_MAX_MEMORY_SIZE


PUSH_NOTIFICATIONS_SETTINGS = {
        "FCM_API_KEY": "AAAACNFoXXA:APA91bHJwC6JKC-WYf6nWwsouKz9MQoYvvpBd4z-AN1m-S0qokmEVgDJ1bChDAo7iq7n9UeNYon8SpYGPt6Zph-cf6EORtMi_LsfhW1MLftk_gZdX9Xr5h7Qz0uRLnKa9I1Pn9YqZaaC",
        # "APNS_CERTIFICATE": "/path/to/your/certificate.pem",
}



